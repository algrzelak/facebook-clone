### This file was autogenerated by GraphQL Nexus
### Do not make changes to this file directly


scalar DateTime

type File {
  encoding: String!
  filename: String!
  id: ID!
  mimetype: String!
  url: String!
}

type FriendStatus {
  fromUserId: Int!
  id: Int!
  receiver: User!
  responseTime: DateTime
  sender: User!
  sentTime: DateTime!
  statusId: Int!
  toUserId: Int!
}

input FriendStatusWhereUniqueInput {
  id: Int
}

enum Gender {
  FEMALE
  MALE
  OTHER
}

type Mutation {
  acceptInvitation(id: Int!): FriendStatus
  createPost(content: String!): Post
  deletePost(id: Int!): Post
  multiUpload(files: [Upload!]!): [File!]!
  removeFriendship(id: Int!): Boolean!
  removeRequest(id: Int!): Boolean!
  sendInvitation(id: Int!): FriendStatus
  signIn(email: String!, password: String!): User!
  signOut: Boolean!
  signUp(birthday: DateTime!, email: String!, firstName: String!, gender: Gender!, lastName: String!, password: String!): User!
  updateAvatar(file: Upload!): File!
}

type Post {
  author: User!
  content: String
  createdAt: DateTime!
  id: Int!
}

input PostWhereUniqueInput {
  id: Int
}

type Query {
  feed: [Post!]!
  friends(id: Int): [User!]
  friendStatus(id: Int!): FriendStatus
  invitations: [FriendStatus!]!
  me: User
  user(where: UserWhereUniqueInput!): User
  users(filter: String!): [User!]!
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload

type User {
  avatar: String
  background: String
  birthday: DateTime!
  email: String!
  firstName: String!
  gender: Gender!
  id: Int!
  lastName: String!
  posts(after: PostWhereUniqueInput, before: PostWhereUniqueInput, first: Int, last: Int, skip: Int): [Post!]!
  receivedInvitations(after: FriendStatusWhereUniqueInput, before: FriendStatusWhereUniqueInput, first: Int, last: Int, skip: Int): [FriendStatus!]!
  sentInvitations(after: FriendStatusWhereUniqueInput, before: FriendStatusWhereUniqueInput, first: Int, last: Int, skip: Int): [FriendStatus!]!
}

input UserWhereUniqueInput {
  email: String
  id: Int
}
