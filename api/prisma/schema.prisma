generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model FriendStatus {
  id                                 Int       @default(autoincrement()) @id
  fromUserId                         Int
  responseTime                       DateTime?
  sentTime                           DateTime  @default(now())
  statusId                           Int       @default(2)
  toUserId                           Int
  User_FriendStatus_fromUserIdToUser User      @relation("FriendStatus_fromUserIdToUser", fields: [fromUserId], references: [id])
  User_FriendStatus_toUserIdToUser   User      @relation("FriendStatus_toUserIdToUser", fields: [toUserId], references: [id])
}

model Post {
  id        Int      @default(autoincrement()) @id
  content   String?
  authorId  Int
  author    User     @relation(fields: [authorId], references: [id])
  createdAt DateTime @default(now())
}

model Profile {
  id     Int     @default(autoincrement()) @id
  bio    String?
  userId Int     @unique
  user   User    @relation(fields: [userId], references: [id])
}

model User {
  id                                         Int            @default(autoincrement()) @id
  firstName                                  String
  lastName                                   String
  email                                      String         @unique
  birthday                                   DateTime
  gender                                     e_gender
  passwordHash                               String
  posts                                      Post[]
  profile                                    Profile?
  FriendStatus_FriendStatus_fromUserIdToUser FriendStatus[] @relation("FriendStatus_fromUserIdToUser")
  FriendStatus_FriendStatus_toUserIdToUser   FriendStatus[] @relation("FriendStatus_toUserIdToUser")
}

enum e_gender {
  FEMALE
  MALE
  OTHER
}
